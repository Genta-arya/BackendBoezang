generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Auth {
  id       Int     @id @default(autoincrement())
  email    String  @unique
  password String
  token    String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  otps Otp[] @relation("UserOtps")
}

model Otp {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  code      String
  createdAt DateTime @default(now())
  expiresAt DateTime

  authId Int
  auth   Auth @relation("UserOtps", fields: [authId], references: [id])
}

model Quotest {
  id        String   @id @default(cuid())
  content   String   @db.VarChar(255)
  author    String   @db.VarChar(255)
  status    Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Browsur {
  id        String         @id @default(cuid())
  title     String         @db.VarChar(255)
  images    ImageBrowsur[]
  status    Boolean        @default(true)
  createdAt DateTime       @default(now())
  updatedAt DateTime       @updatedAt
}

model ImageBrowsur {
  id        String  @id @default(cuid())
  url       String  @db.VarChar(255)
  browsur   Browsur @relation(fields: [browsurId], references: [id])
  browsurId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Artikel {
  id        String   @id @default(cuid())
  content   String   @db.Text
  thumbnail String
  title     String
  author    String   @db.VarChar(255)
  status    Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Produk {
  id          String    @id @default(cuid())
  name        String
  category    String
  spesifikasi String    @db.Text
  status      Boolean   @default(true)
  deskripsi   String    @db.Text
  imageUrl    String
  variants    Variant[]
}

model Variant {
  id            String  @id @default(cuid())
  externalId    String  @unique // ID yang tidak berganti
  name          String
  kapasitas     Int
  price         Int
  quality       Boolean @default(true)
  product       Produk  @relation(fields: [productId], references: [id])
  productId     String
  colorVariants Warna[]
}

model PromoVariant {
  id         String   @id @default(cuid())
  variantId  String   @unique // variantId masih diperlukan tetapi tanpa relasi
  discount   Int
  status     Boolean
  expiryDate DateTime
}

model Warna {
  id        String  @id @default(cuid())
  value     String
  variant   Variant @relation(fields: [variantId], references: [id])
  variantId String
}
